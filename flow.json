[
    {
        "id": "a1856de285adc81c",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "88b4181fcd4a9d1b",
        "type": "natural-language-understanding",
        "z": "a1856de285adc81c",
        "name": "",
        "categories": true,
        "limitcategories": "3",
        "classifications": false,
        "classifications-model": "8",
        "concepts": false,
        "maxconcepts": "8",
        "doc-emotion": true,
        "doc-emotion-target": "",
        "doc-sentiment": false,
        "doc-sentiment-target": "",
        "entity": false,
        "entity-emotion": false,
        "entity-sentiment": false,
        "maxentities": "50",
        "keyword": false,
        "keyword-emotion": false,
        "keyword-sentiment": false,
        "maxkeywords": "50",
        "metadata": false,
        "relation": false,
        "semantic": false,
        "semantic-entities": false,
        "semantic-keywords": false,
        "maxsemantics": "50",
        "limittextcharacters": "0",
        "syntax": false,
        "syntax-sentences": false,
        "syntax-tokens-lemma": false,
        "syntax-tokens-pos": false,
        "service-endpoint": "https://api.au-syd.natural-language-understanding.watson.cloud.ibm.com/instances/45b0a5cf-9c3f-400c-b8e2-ea5fb84dcaac",
        "x": 460,
        "y": 280,
        "wires": [
            [
                "60cd4a6a6e24b04d"
            ]
        ]
    },
    {
        "id": "60cd4a6a6e24b04d",
        "type": "debug",
        "z": "a1856de285adc81c",
        "name": "check nlu result",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "features",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "a98ce99f0bdc684a",
        "type": "watson-translator",
        "z": "a1856de285adc81c",
        "name": "",
        "action": "translate",
        "basemodel": "ar-en",
        "domain": "general",
        "srclang": "en",
        "destlang": "zh-TW",
        "apikey": "8XjrcLsoZzhHTj6yBMILGvFXvrH4D5LgN2lX7B9Sj2r-",
        "custom": "",
        "domainhidden": "general",
        "srclanghidden": "en",
        "destlanghidden": "zh-TW",
        "basemodelhidden": "ar-en",
        "customhidden": "",
        "filetype": "forcedglossary",
        "trainid": "",
        "lgparams2": true,
        "service-endpoint": "https://api.au-syd.language-translator.watson.cloud.ibm.com/instances/faeb5936-8fb1-4a25-a8a2-413f0c21e2e9",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "b172e12d3b89792c",
                "715af9512c547e42"
            ]
        ]
    },
    {
        "id": "b172e12d3b89792c",
        "type": "debug",
        "z": "a1856de285adc81c",
        "name": "check translator result",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 360,
        "wires": []
    },
    {
        "id": "ac9d2dd9788b1881",
        "type": "function",
        "z": "a1856de285adc81c",
        "name": "convertEmailToString",
        "func": "// Get the emails\nconsole.debug(\"Emails:\" + msg);\nvar email = {\n    topic: msg.topic,\n    payload: msg.payload,\n    html: msg.html,\n    from: msg.from,\n    date: msg.date,\n    header: msg.header,\n    attachments: msg.attachments\n};\n// Convert email object to string\nmsg.payload = JSON.stringify(email);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nconsole.debug(\"saveEmailToPayload starting!\");\n",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nconsole.debug(\"saveEmailToPayload stoped!\");\n",
        "libs": [],
        "x": 320,
        "y": 120,
        "wires": [
            [
                "6bcfb1d2fd6e9a73"
            ]
        ]
    },
    {
        "id": "7e02ddd6d130feeb",
        "type": "e-mail in",
        "z": "a1856de285adc81c",
        "name": "imap",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "ALL",
        "repeat": "300",
        "fetch": "trigger",
        "inputs": 1,
        "x": 150,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "715af9512c547e42",
        "type": "function",
        "z": "a1856de285adc81c",
        "name": "convertProcessedStrToJsonObj",
        "func": "msg.payload = JSON.parse(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 440,
        "wires": [
            [
                "0b8e73c112909bde"
            ]
        ]
    },
    {
        "id": "0b8e73c112909bde",
        "type": "debug",
        "z": "a1856de285adc81c",
        "name": "check processed result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 440,
        "wires": []
    },
    {
        "id": "6bcfb1d2fd6e9a73",
        "type": "function",
        "z": "a1856de285adc81c",
        "name": "countEmailNumber",
        "func": "//count email number\nvar emailCount = flow.get('emailCount') || 0;\nemailCount++;\nflow.set('emailCount', emailCount);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 180,
        "wires": [
            [
                "398fc6070840f9a0"
            ]
        ]
    },
    {
        "id": "398fc6070840f9a0",
        "type": "switch",
        "z": "a1856de285adc81c",
        "name": "isReachedEmailLimit",
        "property": "emailCount",
        "propertyType": "flow",
        "rules": [
            {
                "t": "gte",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "lt",
                "v": "10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 180,
        "wires": [
            [
                "8faf1301c8b9ae42"
            ],
            [
                "88b4181fcd4a9d1b",
                "a98ce99f0bdc684a",
                "bd8618a8f8af296e"
            ]
        ]
    },
    {
        "id": "8faf1301c8b9ae42",
        "type": "debug",
        "z": "a1856de285adc81c",
        "name": "moreThan10 (skipIBM)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 140,
        "wires": []
    },
    {
        "id": "bd8618a8f8af296e",
        "type": "debug",
        "z": "a1856de285adc81c",
        "name": "inputToIBM",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 200,
        "wires": []
    },
    {
        "id": "1d7cf7e02f055541",
        "type": "http in",
        "z": "a1856de285adc81c",
        "name": "GetEmail",
        "url": "getEmails/:limit",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 560,
        "wires": [
            [
                "1c821decd0cab5ce"
            ]
        ]
    },
    {
        "id": "1c821decd0cab5ce",
        "type": "change",
        "z": "a1856de285adc81c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.params.limit",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 540,
        "wires": [
            [
                "9626f8d6b8b70935"
            ]
        ]
    },
    {
        "id": "9626f8d6b8b70935",
        "type": "function",
        "z": "a1856de285adc81c",
        "name": "defaultLimit",
        "func": "if (msg.payload == null) {\n    msg.payload = \"5\";\n}\nmsg.payload = Number(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 580,
        "wires": [
            [
                "b230d9fbcb9f5803"
            ]
        ]
    },
    {
        "id": "b230d9fbcb9f5803",
        "type": "http request",
        "z": "a1856de285adc81c",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.nylas.com/messages?in=inbox&limit={{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Accept",
                "valueType": "other",
                "valueValue": "application/json"
            },
            {
                "keyType": "other",
                "keyValue": "Content-Type",
                "valueType": "other",
                "valueValue": "application/json"
            }
        ],
        "x": 650,
        "y": 620,
        "wires": [
            [
                "dbf28c3dc62e4a72"
            ]
        ]
    },
    {
        "id": "f8ad8ac83a2e2e71",
        "type": "split",
        "z": "a1856de285adc81c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 650,
        "y": 660,
        "wires": [
            [
                "24a154ad01e1ea86"
            ]
        ]
    },
    {
        "id": "24a154ad01e1ea86",
        "type": "function",
        "z": "a1856de285adc81c",
        "name": "convertDateFormat",
        "func": "msg.payload.date = new Date(msg.payload.date * 1000).toLocaleString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 700,
        "wires": [
            [
                "75f277e4dd35be43"
            ]
        ]
    },
    {
        "id": "75f277e4dd35be43",
        "type": "join",
        "z": "a1856de285adc81c",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 670,
        "y": 740,
        "wires": [
            [
                "73ad1e12c9c44ff4"
            ]
        ]
    },
    {
        "id": "73ad1e12c9c44ff4",
        "type": "template",
        "z": "a1856de285adc81c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n   <head>\n       <script src=\"https://cdn.tailwindcss.com\"></script>\n   </head>\n<body>\n<h1 class=\"font-black\" style=\"text-align:center\">Inbox</h2>\n<table class=\"table-auto\">\n   <tr>\n       <th>Subject</th>\n       <th>From (Name)</th>\n       <th>From (Email)</th>\n       <th>Date</th>\n       <th>Snippet</th>\n   </tr>\n   {{#payload}}\n   <tr>\n   <td>\n   {{subject}}\n   </td>\n   <td>\n   {{from.0.name}}\n   </td>\n   <td>\n   {{from.0.email}}\n   </td>   \n   <td>\n   {{date}}\n   </td>   \n   <td>\n   {{snippet}}\n   </td>\n   </tr>\n   {{/payload}}\n</table> \n</body>\n</html>",
        "output": "str",
        "x": 660,
        "y": 780,
        "wires": [
            [
                "dd3b9427027ce47b",
                "4bf6e6d943e2a839"
            ]
        ]
    },
    {
        "id": "dd3b9427027ce47b",
        "type": "http response",
        "z": "a1856de285adc81c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 780,
        "wires": []
    },
    {
        "id": "e30bc83193dec4d2",
        "type": "http in",
        "z": "a1856de285adc81c",
        "name": "GetEmailWithoutLimit ",
        "url": "getEmails",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 520,
        "wires": [
            [
                "1c821decd0cab5ce"
            ]
        ]
    },
    {
        "id": "4bf6e6d943e2a839",
        "type": "debug",
        "z": "a1856de285adc81c",
        "name": "outputTemplate",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 840,
        "wires": []
    },
    {
        "id": "dbf28c3dc62e4a72",
        "type": "switch",
        "z": "a1856de285adc81c",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 780,
        "wires": [
            [
                "f8ad8ac83a2e2e71"
            ],
            [
                "9e311bdab8cb8b7d"
            ]
        ]
    },
    {
        "id": "9e311bdab8cb8b7d",
        "type": "template",
        "z": "a1856de285adc81c",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "You got no email : {{payload}} !",
        "output": "str",
        "x": 620,
        "y": 840,
        "wires": [
            [
                "dd3b9427027ce47b",
                "4bf6e6d943e2a839"
            ]
        ]
    }
]